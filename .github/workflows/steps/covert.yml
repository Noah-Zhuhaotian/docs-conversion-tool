name: Convert Documents

on:
  # Automatically triggered when the "Test Dependencies and Environment" workflow completes successfully
  workflow_run:
    workflows: ["Test Dependencies and Environment"]
    types:
      - completed
    branches:
      - dev
  
  # Manually trigger the workflow
  workflow_dispatch:

jobs:
  convert:
    name: Convert Word to Markdown
    # Only run this job if the previous workflow was successful or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
      
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Cache Python modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          npm ci
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr
      
      - name: Run conversion
        run: |
          echo "Starting document conversion..."
          node automation.js
      
      - name: Validate conversion
        run: |
          echo "Generated Markdown files:"
          ls -la docs/markdown/
          
          # Check if any files were generated
          if [ -z "$(ls -A docs/markdown/)" ]; then
            echo "::error::No Markdown files were generated!"
            exit 1
          fi
          
          # Check for Mermaid diagrams
          MERMAID_COUNT=0
          for file in docs/markdown/*.md; do
            if grep -q "```mermaid" "$file"; then
              ((MERMAID_COUNT++))
              echo "âœ“ File $(basename $file) contains Mermaid diagrams"
            else
              echo "! File $(basename $file) does not contain Mermaid diagrams"
            fi
          done
          echo "Found $MERMAID_COUNT files with Mermaid diagrams."
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: markdown-docs
          path: docs/markdown/
          retention-days: 7
      
      - name: Commit changes
        # Only run this step if the branch is 'dev'
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add docs/markdown/*.md
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-convert Word documents to Markdown [skip ci]"
            git push
          fi