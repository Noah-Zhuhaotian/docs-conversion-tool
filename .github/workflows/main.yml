name: Full Documentation Pipeline

on:
  # Only allow manual trigger
  workflow_dispatch:
    inputs:
      deploy_docs:
        description: 'Deploy documentation to GitHub Pages'
        required: false
        type: boolean
        default: false

jobs:
  # Step 1: Run tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Verify environment
        run: |
          # Check directory structure
          mkdir -p docs/word
          mkdir -p docs/markdown
          mkdir -p docs/images
          
          # Check dependencies
          if ! npm list mammoth &>/dev/null; then
            echo "::error::mammoth dependency is missing, please install it"
            exit 1
          fi
          
          echo "Environment verification successful"

  # Step 2: Convert documents
  convert:
    name: Convert Documents
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run conversion
        run: node simplified-automation.js
      
      - name: Validate conversion
        run: |
          echo "Generated Markdown files:"
          ls -la docs/markdown/
          
          echo "Extracted image files:"
          ls -la docs/images/
          
          # Check if files were generated
          if [ -z "$(ls -A docs/markdown/)" ]; then
            echo "::error::No Markdown files were generated!"
            exit 1
          fi
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: generated-docs
          path: |
            docs/markdown/
            docs/images/
          retention-days: 7
      
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add docs/markdown/*.md
          git add docs/images/*
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Convert Word documents to Markdown and extract images [skip ci]"
            git push
          fi

  # Step 3: Build and deploy docs with MkDocs
  deploy-docs:
    name: Build and Deploy with MkDocs
    needs: convert
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy_docs }}
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Download generated docs
        uses: actions/download-artifact@v3
        with:
          name: generated-docs
          path: ./docs
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs mkdocs-material pymdown-extensions
      
      - name: Debug - List files
        run: |
          echo "Contents of docs directory:"
          ls -la docs/
          echo "Contents of docs/markdown directory:"
          ls -la docs/markdown/
          echo "Contents of docs/images directory:"
          ls -la docs/images/
      
      - name: Prepare MkDocs configuration
        run: |
          # Create MkDocs configuration if it doesn't exist
          if [ ! -f "mkdocs.yml" ]; then
            cat > mkdocs.yml << EOF
          site_name: Project Documentation
          site_url: https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY#*/}/
          
          theme:
            name: material
            features:
              - navigation.tabs
              - navigation.sections
              - toc.integrate
            palette:
              primary: indigo
              accent: indigo
          
          markdown_extensions:
            - pymdownx.highlight
            - pymdownx.superfences
            - pymdownx.tasklist:
                custom_checkbox: true
          
          plugins:
            - search
          
          # Set docs directory to markdown
          docs_dir: docs
          
          # Configure the site structure
          nav:
            - Home: index.md
          EOF
            
            # Update docs_dir to match where our downloaded artifacts are
            echo "Docs dir set to docs/"
          fi
      
      - name: Create index file
        run: |
          # Create index.md if it doesn't exist
          if [ ! -f "docs/index.md" ]; then
            cat > docs/index.md << EOF
          # Project Documentation
          
          This is an automatically generated documentation site. Below you'll find all the available documents.
          
          ## Available Documents
          
          EOF
            
            # Add links to all documents
            for file in docs/markdown/*.md; do
              filename=$(basename "$file")
              title=$(head -n 1 "$file" | sed 's/^# //')
              if [ -z "$title" ]; then
                title="${filename%.md}"
              fi
              echo "- [${title}](markdown/${filename})" >> docs/index.md
            done
          fi
      
      - name: Debug - Show MkDocs config
        run: |
          echo "MkDocs configuration:"
          cat mkdocs.yml
          echo "Index file content:"
          cat docs/index.md
      
      - name: Fix image paths for MkDocs
        run: |
          # For each markdown file, update image paths to be relative to docs directory
          for file in docs/markdown/*.md; do
            # Replace "/images/" with "../images/" in all Markdown files
            sed -i 's|](/images/|](../images/|g' "$file"
          done
          
          echo "Image paths fixed for MkDocs"
      
      - name: Build documentation site
        run: mkdocs build --verbose
      
      - name: Debug - Build output
        run: |
          echo "Build output directory contents:"
          ls -la site/
          echo "Generated HTML files:"
          find site/ -name "*.html" | sort
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          full_commit_message: 'Deploy documentation [skip ci]'
          force_orphan: true